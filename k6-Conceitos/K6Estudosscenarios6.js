import http from 'k6/http';
import { sleep } from 'k6';

export const options = {
  scenarios: {
    contacts: {
      executor: 'constant-vus',
      vus: 10,
      duration: '30s',
    },
  },
};

export default function () {
  http.get('https://test.k6.io/contacts.php');
  sleep(0.5);
}


/*
Como funciona constant-vus?
executor: 'constant-vus' â†’ MantÃ©m 10 usuÃ¡rios virtuais (VUs) ativos durante todo o teste.
vus: 10 â†’ 10 usuÃ¡rios rodando simultaneamente.
duration: '30s' â†’ O teste serÃ¡ executado por 30 segundos.

Use constant-vus quando:

VocÃª quer manter uma carga estÃ¡vel de usuÃ¡rios simultÃ¢neos.
Precisa medir o comportamento do sistema sob carga constante.
Quer avaliar taxas de erro, tempos de resposta e estabilidade sob trÃ¡fego contÃ­nuo.

Como esse teste se comporta?
Como temos 10 VUs rodando ao mesmo tempo, e cada um faz uma requisiÃ§Ã£o a cada 0.5 segundos, podemos estimar a quantidade de requisiÃ§Ãµes:
CÃ¡lculo das requisiÃ§Ãµes
ğŸ“Œ Cada VU faz aproximadamente 2 requisiÃ§Ãµes por segundo (1 requisiÃ§Ã£o + 0.5s de espera).
ğŸ“Œ Com 10 VUs, teremos 10 Ã— 2 = 20 requisiÃ§Ãµes por segundo.
ğŸ“Œ Em 30 segundos, teremos 20 Ã— 30 = 600 requisiÃ§Ãµes no total.

*/